user       www www;  ## Default: nobody
worker_processes  5;  ## Default: 1
error_log  logs/error.log;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include    /etc/nginx/proxy.conf;
  include    /etc/nginx/fastcgi.conf;
  index    index.html index.htm index.php;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/access.log  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

#  server { # php/fastcgi
#    listen       80;
#    server_name  domain1.com www.domain1.com;
#    access_log   logs/domain1.access.log  main;
#    root         html;
#
#    location ~ \.php$ {
#      fastcgi_pass   127.0.0.1:1025;
#    }
#  }

#  server { # simple reverse-proxy
#    listen       80;
#    server_name  domain2.com www.domain2.com;
#    access_log   logs/domain2.access.log  main;
#
#    # serve static files
#    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
#      root    /var/www/virtual/big.server.com/htdocs;
#      expires 30d;
#    }
#
#    # pass requests for dynamic content to rails/turbogears/zope, et al
#    location / {
#      proxy_pass      http://127.0.0.1:8080;
#    }
#  }

#  upstream big_server_com {
#    server 127.0.0.3:8000 weight=5;
#    server 127.0.0.3:8001 weight=5;
#    server 192.168.0.1:8000;
#    server 192.168.0.1:8001;
#  }

#  server { # simple load balancing
#    listen          80;
#    server_name     big.server.com;
#    access_log      logs/big.server.access.log main;
#
#    location / {
#      proxy_pass      http://big_server_com;
#    }
#  }

server {
    location / {
        root /data/www;
    }

    location /images/ {
        root /data;
    }
}

server {
    listen      80;
    listen [::]:80;
    server_name example.com;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    location ^~ /.well-known {
        allow all;
        root  /data/letsencrypt;
    }
}

server {
    listen      443           ssl http2;
    listen [::]:443           ssl http2;
    server_name               example.com;

    location / {
        root /data/www;
    }

    ssl                       on;

    add_header                Strict-Transport-Security "max-age=31536000" always;

    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       10m;

    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling              on;
    ssl_stapling_verify       on;
    resolver                  8.8.8.8 8.8.4.4;

    ssl_certificate           /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/example.com/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/example.com/chain.pem;

    access_log                /dev/stdout;
    error_log                 /dev/stderr info;
}

}
